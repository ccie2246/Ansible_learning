#!/bin/bash
#
############### PARAMETERS ###############
PingSource=10.89.250.10
PingDest=10.89.250.27
PingCount=1
PingWait=1
PingPmtud=do
PingPacketSize=8972
#########################################
#
#
############### CONTROL #################
PROBE=PROBE01
HOSTUP=Y
TestInterval=300
TestIteration=1
FailureCount=3
CountDown=0
TotalCountUp=0
TotalCountDown=0
LogFileLocation=/mnt/flash/$PROBE.log
LogFileTrailLocation=/mnt/flash/$PROBE-TRAIL.log
LogFileMaxSize=10000
LatencyTotal=0
LatencyAvg=0
########################################

[ -f "$LogFileLocation" ] || touch $LogFileLocation
[ -f "$LogFileTrailLocation" ] || touch $LogFileTrailLocation

while true; do
    > $LogFileLocation

    echo -e "SLA ECHO to $PingDest, sending $PingCount $PingPacketSize-byte probe every $TestInterval seconds" >> $LogFileLocation

    NOW=`date +%F-%T`
    echo -e "\n---Iteration: $TestIteration ($NOW)---\n" >> $LogFileLocation

for i in $PingDest
do
    ping -c $PingCount -W $PingWait -M $PingPmtud -s $PingPacketSize -I $PingSource $i &> /dev/null
    PingResult=$?

    if [ "$PingResult" = "1" ]; then
        let "TotalCountDown++"
        let "CountDown++"
        echo -e "Result: FAILURE" >> $LogFileLocation
        echo -e "Total Success: $TotalCountUp" >> $LogFileLocation
        echo -e "Total Failure: $TotalCountDown" >> $LogFileLocation
        /mnt/flash/log.py $PROBE "WARNING" "[event@$PROBE target=\"$i\" iteration=\"$TestIteration\" status=\"FAILURE\"]"

        if [ "$HOSTUP" = "Y" ]; then
            if [ "$CountDown" = "$FailureCount" ]; then
                NOW=`date`
                echo "$NOW: $i is DOWN" >> $LogFileTrailLocation
                /mnt/flash/log.py $PROBE "CRITICAL" "[event@$PROBE target=\"$i\" status=\"DOWN\"]"
                HOSTUP=N
            fi
        else
            HOSTUP=N
        fi
    fi

    if [ "$PingResult" = "0" ]; then
        let "TotalCountUp++"
        ping_test=`ping -c $PingCount -W $PingWait -M $PingPmtud -s $PingPacketSize -I $PingSource $i | grep "bytes from"`
        ping_data=`echo $ping_test | cut -d " " -f 1`
        ping_latency=`echo $ping_test | sed -ne '/.*time=/{;s///;s/\ ms.*//;p;}'`
        LatencyTotal=`python -c "print($LatencyTotal+$ping_latency)"`
        LatencyAvg=`python -c "a=$LatencyTotal/$TestIteration; print('%.2f' % a)"`

        echo -e "Result: SUCCESS" >> $LogFileLocation
        echo -e "Total Success: $TotalCountUp" >> $LogFileLocation
        echo -e "Total Failure: $TotalCountDown" >> $LogFileLocation
        echo -e "Data: $ping_data" >> $LogFileLocation
        echo -e "Latency: $ping_latency" >> $LogFileLocation
        echo -e "Avg Latency: $LatencyAvg" >> $LogFileLocation
        /mnt/flash/log.py $PROBE "NOTICE" "[event@$PROBE target=\"$i\" iteration=\"$TestIteration\" status=\"SUCCESS\" latency=\"$ping_latency\" avg_latency=\"$LatencyAvg\"]"

        if [ "$HOSTUP" = "N" ]; then
            NOW=`date`
            echo "$NOW: $i is UP" >> $LogFileTrailLocation
            /mnt/flash/log.py $PROBE "NOTICE" "[event@$PROBE target=\"$i\" status=\"UP\"]"
            Count=0
            HOSTUP=Y
        else
            HOSTUP=Y
        fi
    fi
done

((TestIteration++))

FileSize=$(stat -c%s $LogFileTrailLocation)

if [ "$FileSize" -ge "$LogFileMaxSize" ]; then
    cp $LogFileTrailLocation ${LogFileTrailLocation}-old
    rm $LogFileTrailLocation
fi

sleep $TestInterval
done
